<div class="border rounded-lg p-4 roll_loc shadow-sm bg-white">
    <h3 class="header-text">
        <span class="roll__title">Roll and Location</span>
        @if (IsEditable)
        {
            <button type="button" class="btn btn-success to__theright" @onclick="@(e => ResetFormRollAndLocation())" data-toggle="modal" data-target="#ModalRollAndLocation">Add More</button>
        }

        @*@if (MaterialModel.Id != Guid.Empty)
            {
                <button type="button" class="btn btn-success to__theright mr-2">Download All QR</button>
            }*@

    </h3>
    <div class="d-flex justify-content-between  background__rool">
        <h5 class="brown__background">Roll and Location</h5>
    </div>
    <div class="container roll__loc">
        <DataGrid TItem="RollAndLocationModel" Data="@_rolls" Responsive Hoverable="true"
                  PageSize="1000000">
            <ChildContent>

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.Id)"
                                Caption="QR">
                    <DisplayTemplate>
                        <QRCode Value="@($"{MaterialModel.Name} - {context.RollNumber}")" Alt="QRCode image" style="width:50px; height:50px" />
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.RollNumber)"
                                Caption="Roll Number" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.TotalCount)"
                                Caption="Total Count" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.OnHandCount)"
                                Caption="On Hand Count" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.IncomingCount)"
                                Caption="Incoming Count" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.ReserveCount)"
                                Caption="Reserved Count" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.AvailableCount)"
                                Caption="Available Count" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.DateAcquired)"
                                Caption="Date Acquired" Editable>
                    <DisplayTemplate>
                        @context.DateAcquired.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.ShelfLife)"
                                Caption="Shelf Life(Years)" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.ConsumeBeforeDate)"
                                Caption="Consume Before Date" Editable>
                    <DisplayTemplate>
                        @context.ConsumeBeforeDate.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.ShadingLabel)"
                                Caption="Shading" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.BuildingOrWarehouse)"
                                Caption="Building / Warehouse" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.TRackNumber)"
                                Caption="TRack Number" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.Rack)"
                                Caption="Rack" Editable />

                <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.PONumber)"
                                Caption="PO Number" Editable>
                    <DisplayTemplate>
                        @if (!String.IsNullOrWhiteSpace(context.PONumber))
                        {
                            <p class="po-issued-date">
                                <button type="button" class="btn hexcolor-7B8E61 text-light text-center"
                                        @onclick="@(() => OnClickPurchaseOrder(context.PONumber))">
                                    @context.PONumber
                                </button>
                            </p>
                            @foreach (var i in PurchaseOrderListModel.Result.Items)
                            {
                                @if (context.PONumber == i.Number)
                                {
                                    <p class="mt-2 po-issued-date">@i.IssuedDate.ToString("MMMM d, yyyy")</p>
                                }
                            }

                        }
                    </DisplayTemplate>
                </DataGridColumn>

                @if (IsEditable)
                {
                    <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.Id)"
                                    Caption="Action">
                        <DisplayTemplate>
                            <svg xmlns="http://www.w3.org/2000/svg" data-toggle="modal" data-target="#ModalRollAndLocation" @onclick="@(e => setRoll(context.RollNumber))" width="24" stroke-width="1.5" height="24" viewBox="0 0 24 24" fill="none">
                                <path d="M20 12V5.74853C20 5.5894 19.9368 5.43679 19.8243 5.32426L16.6757 2.17574C16.5632 2.06321 16.4106 2 16.2515 2H4.6C4.26863 2 4 2.26863 4 2.6V21.4C4 21.7314 4.26863 22 4.6 22H11" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M8 10H16M8 6H12M8 14H11" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M16 5.4V2.35355C16 2.15829 16.1583 2 16.3536 2C16.4473 2 16.5372 2.03725 16.6036 2.10355L19.8964 5.39645C19.9628 5.46275 20 5.55268 20 5.64645C20 5.84171 19.8417 6 19.6464 6H16.6C16.2686 6 16 5.73137 16 5.4Z" fill="currentColor" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" />
                                <path d="M17.9541 16.9394L18.9541 15.9394C19.392 15.5015 20.102 15.5015 20.5399 15.9394V15.9394C20.9778 16.3773 20.9778 17.0873 20.5399 17.5252L19.5399 18.5252M17.9541 16.9394L14.963 19.9305C14.8131 20.0804 14.7147 20.2741 14.6821 20.4835L14.4394 22.0399L15.9957 21.7973C16.2052 21.7646 16.3988 21.6662 16.5487 21.5163L19.5399 18.5252M17.9541 16.9394L19.5399 18.5252" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" />
                            </svg>
                            @if (context.ReserveCount == null)
                            {
                                <svg xmlns="http://www.w3.org/2000/svg" @onclick="@(e => RemoveRollAndLocation(context.RollNumber))" width="22" height="22" fill="#000000" class="bi bi-trash3" viewBox="0 0 16 16">
                                    <path d="M6.5 1h3a.5.5 0 0 1 .5.5v1H6v-1a.5.5 0 0 1 .5-.5ZM11 2.5v-1A1.5 1.5 0 0 0 9.5 0h-3A1.5 1.5 0 0 0 5 1.5v1H2.506a.58.58 0 0 0-.01 0H1.5a.5.5 0 0 0 0 1h.538l.853 10.66A2 2 0 0 0 4.885 16h6.23a2 2 0 0 0 1.994-1.84l.853-10.66h.538a.5.5 0 0 0 0-1h-.995a.59.59 0 0 0-.01 0H11Zm1.958 1-.846 10.58a1 1 0 0 1-.997.92h-6.23a1 1 0 0 1-.997-.92L3.042 3.5h9.916Zm-7.487 1a.5.5 0 0 1 .528.47l.5 8.5a.5.5 0 0 1-.998.06L5 5.03a.5.5 0 0 1 .47-.53Zm5.058 0a.5.5 0 0 1 .47.53l-.5 8.5a.5.5 0 1 1-.998-.06l.5-8.5a.5.5 0 0 1 .528-.47ZM8 4.5a.5.5 0 0 1 .5.5v8.5a.5.5 0 0 1-1 0V5a.5.5 0 0 1 .5-.5Z" />
                                </svg>
                            }
                        </DisplayTemplate>
                    </DataGridColumn>

                }
                @* <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.RollNumber)"
                        Caption="Roll Number" Editable />

                    <DataGridColumn TItem="RollAndLocationModel" Field="@nameof(RollAndLocationModel.RollNumber)"
                        Caption="Roll Number" Editable /> *@

            </ChildContent>
            <EmptyTemplate>
                <div class="box text-center">
                    No records were found.
                </div>
            </EmptyTemplate>
        </DataGrid>
    </div>
</div>

<EditForm Model="RollAndLocationModel" @ref="editForm" OnValidSubmit="OnSubmit">
    <DataAnnotationsValidator />
    <div class="modal fade" id="ModalRollAndLocation" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    @if (isUpdating == true)
                    {
                        <h5 class="modal-title" id="exampleModalLabel">Edit Roll And Location</h5>
                    }
                    else
                    {
                        <h5 class="modal-title" id="exampleModalLabel">Add Roll And Location</h5>
                    }
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="bg-warning p-3">
                        <div> Note: </div>
                        <div> - Roll Number must be Unique</div>
                    </div>

                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">Roll Number<span class="text-danger">*</span></label>

                        <InputText @bind-Value="RollAndLocationModel.RollNumber" class="form-control mb-2 form-control-sm" placeholder="Roll Number" />
                        <ValidationMessage For="@(() => RollAndLocationModel.RollNumber)" />

                    </div>
                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">Date Acquired<span class="text-danger">*</span></label>
                        <InputDate @bind-Value="RollAndLocationModel.DateAcquired" class="form-control mb-2 form-control-sm" placeholder="Date Acquired" />
                        <ValidationMessage For="@(() => RollAndLocationModel.DateAcquired)" />

                    </div>
                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">Shelf Life(Years)</label>
                        <InputNumber @bind-Value="RollAndLocationModel.ShelfLife" class="form-control mb-2 form-control-sm" placeholder="Shelf Life" />
                        <ValidationMessage For="@(() => RollAndLocationModel.ShelfLife)" />

                    </div>


                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">Total Count<span class="text-danger">*</span></label>
                        <InputNumber @bind-Value="RollAndLocationModel.TotalCount" class="form-control mb-2 form-control-sm" placeholder="Total Count" />
                        <ValidationMessage For="@(() => RollAndLocationModel.TotalCount)" />

                    </div>

                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput2">Shading</label>
                        <InputSelect @bind-Value="RollAndLocationModel.ShadingId"
                                     class="form-control mb-2 form-control-sm" id="ci" aria-placeholder="Select Shading">
                            <option selected="selected" disabled value="0">Select Shading</option>

                            @foreach (var shading in ShadingListModel.Result.Items)
                            {
                                <option value="@shading.Id">@shading.Label</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => RollAndLocationModel.ShadingId)" />

                    </div>
                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">Building/Warehouse<span class="text-danger">*</span></label>
                        <InputText @bind-Value="RollAndLocationModel.BuildingOrWarehouse" class="form-control mb-2 form-control-sm" placeholder="Building/Warehouse" />
                        <ValidationMessage For="@(() => RollAndLocationModel.BuildingOrWarehouse)" />

                    </div>
                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput2">T-Rack Number<span class="text-danger">*</span></label>

                        <InputText @bind-Value="RollAndLocationModel.TRackNumber" class="form-control mb-2 form-control-sm" placeholder="T-Rack Number" />
                        <ValidationMessage For="@(() => RollAndLocationModel.TRackNumber)" />

                    </div>
                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">Rack<span class="text-danger">*</span></label>

                        <InputText @bind-Value="RollAndLocationModel.Rack" class="form-control mb-2 form-control-sm" placeholder="Rack" />
                        <ValidationMessage For="@(() => RollAndLocationModel.Rack)" />

                    </div>
                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">PO Number</label>

                        @* <InputText @bind-Value="RollAndLocationModel.PONumber" class="form-control mb-2 form-control-sm" placeholder="PONumber" /> *@
                        <InputSelect @bind-Value="RollAndLocationModel.PONumber"
                                     class="form-control mb-2 form-control-sm" id="ci" aria-placeholder="Select PO Number">
                            <option selected="selected" disabled value="0">Select PO Number</option>
                            @foreach (var purchaseOrder in PurchaseOrderListModel.Result.Items.Where(x => x.Status != "Received"))
                            {
                                <option value="@purchaseOrder.Number">@purchaseOrder.Number</option>
                            }
                        </InputSelect>
                        <ValidationMessage For="@(() => RollAndLocationModel.PONumber)" />

                    </div>

                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">Incoming Count</label>

                        <InputNumber @bind-Value="RollAndLocationModel.IncomingCount" class="form-control mb-2 form-control-sm" placeholder="Incoming Count" />
                        <ValidationMessage For="@(() => RollAndLocationModel.IncomingCount)" />

                    </div>

                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">Shipped Count</label>

                        <InputNumber @bind-Value="RollAndLocationModel.ShippedCount" class="form-control mb-2 form-control-sm" placeholder="Shipped Count" />
                        <ValidationMessage For="@(() => RollAndLocationModel.ShippedCount)" />

                    </div>
                    <div class="form-group mt-4">
                        <label for="formGroupExampleInput">Received Count</label>

                        <InputNumber @bind-Value="RollAndLocationModel.ReceivedCount" class="form-control mb-2 form-control-sm" placeholder="Received Count" />
                        <ValidationMessage For="@(() => RollAndLocationModel.ReceivedCount)" />

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primar avocado__color">Save changes</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    EditForm editForm;
}